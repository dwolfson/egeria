
@ucURL=http://localhost:8080
@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}


###
# =====================================================================================================================
# A governance action process describes a well-defined series of steps that gets something done.
# The commands below will help you find and underatns the process that provisions fromed from the landing area into
# Coco Data Lake.

@projectGUID=a2915132-9d9a-4449-846f-43a871b5a6a0

###
# @name findProjects
# Returns the list of projects matching the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/project-manager/projects/by-search-string?startFrom=0&pageSize=0&startsWith=false&endsWith=false&ignoreCase=true
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Clinical"
}


###
# @name create schema
POST {{ucURL}}/api/2.1/unity-catalog/schemas
Content-Type: application/json

{
  "name": "clinical_trial_drop_foot",
  "catalog_name" : "unity",
  "comment": "Example clinical trial used for education and testing of governance procedures."
}


###
# @name findGovernanceActionTypes (Clinical Trials)
# Retrieve the list of governance action type metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/governance-action-types/by-search-string?startFrom=0&pageSize=0&startsWith=false&endsWith=false&ignoreCase=true
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "onboard-hospital"
}



###
# @name initiate set-up-data-lake
# Using the named governance action type as a template, initiate a single engine action.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/governance-action-types/initiate
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "InitiateGovernanceActionTypeRequestBody",
  "governanceActionTypeQualifiedName": "ClinicalTrials@CocoPharmaceuticals:set-up-data-lake",
  "actionTargets": [
    {
      "class" : "NewActionTarget",
      "actionTargetName": "clinicalTrialProject",
      "actionTargetGUID": "target guid goes here"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "dataLakeSchema",
      "actionTargetGUID": "target guid goes here"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "volumeTemplate",
      "actionTargetGUID": "target guid goes here"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "dataLakeRootFolder",
      "actionTargetGUID": "target guid goes here"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "lastUpdateConnector",
      "actionTargetGUID": "target guid goes here"
    }]
}


###
# =====================================================================================================================
# A governance action process describes a well-defined series of steps that gets something done.
# The commands below will help you find and underatns the process that provisions fromed from the landing area into
# Coco Data Lake.

@newElementProcessName=Coco:GovernanceActionProcess:ClinicalTrials:WeeklyMeasurements:Onboarding
@newElementProcessGUID=508d3878-8eae-47e5-8507-ee936f33b418


###
# @name getGovernanceActionProcessesByName
# Retrieve the list of governance action process metadata elements with a matching qualified or display name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/governance-action-processes/by-name?
    startFrom=0&pageSize=0
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "{{newElementProcessName}}"
}


###
# @name=getAssetGraph for New Element Process
# Return all the elements that are anchored to an asset plus relationships between these elements and to other elements.
#
# Asset: https://egeria-project.org/concepts/asset/
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/asset-catalog/assets/{{newElementProcessGUID}}/as-graph?startFrom=0&pageSize=0
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name initiate onboard-hospital (Oak Dene)
# Using the named governance action type as a template, initiate a single engine action.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/governance-action-types/initiate
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "InitiateGovernanceActionTypeRequestBody",
  "governanceActionTypeQualifiedName": "ClinicalTrials@CocoPharmaceuticals:onboard-hospital",
  "actionTargets": [
    {
      "class" : "NewActionTarget",
      "actionTargetName": "clinicalTrialProject",
      "actionTargetGUID": "target guid goes here"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "hospital",
      "actionTargetGUID": "target guid goes here"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "hospitalTemplate",
      "actionTargetGUID": "target guid goes here"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "newElementProcess",
      "actionTargetGUID": "{{newElementProcessGUID}}"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "landingAreaConnector",
      "actionTargetGUID": "target guid goes here"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "landingAreaFolder",
      "actionTargetGUID": "target guid goes here"
    },
    {
      "class" : "NewActionTarget",
      "actionTargetName": "contactPerson",
      "actionTargetGUID": "target guid goes here"
    }]
}

###
# @name list volumes
GET {{ucURL}}/api/2.1/unity-catalog/volumes?catalog_name=unity&schema_name=clinical_trial_drop_foot&max_results=10

###
# @name create volume
POST {{ucURL}}/api/2.1/unity-catalog/volumes
Content-Type: application/json

{
  "name": "weekly_measurements",
  "catalog_name" : "unity",
  "schema_name": "clinical_trial_drop_foot",
  "comment": "Weekly measurements for patients on clinical trial",
  "volume_type": "EXTERNAL",
  "storage_location": "/Users/amandachessell/Code/uc/unitycatalog/etc/data/external/unity/clinical_trial_drop_foot/volumes/weekly_measurements/"
}

###
# @name get volume
GET {{ucURL}}/api/2.1/unity-catalog/volumes/unity.clinical_trial_drop_foot.weekly_measurements
Content-Type: application/json

